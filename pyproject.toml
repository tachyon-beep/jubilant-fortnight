[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "the-great-work"
version = "1.0.0-rc1"
description = "The Great Work: Collaborative Knowledge Game"
readme = "README.md"
authors = [{name = "The Great Work Dev Team"}]
license = {file = "LICENSE"}
requires-python = ">=3.12"
keywords = ["discord", "game", "narrative", "asynchronous", "telemetry"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Games/Entertainment :: Simulation",
]
dependencies = [
    "APScheduler>=3.10",
    "PyYAML>=6.0",
    "discord.py>=2.3",
    "pydantic>=1.10",
    "openai>=1.0",
    "qdrant-client>=1.7",
    "sentence-transformers>=2.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-asyncio>=0.21",
    "pytest-cov>=5.0",
    "ruff>=0.6",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.setuptools.packages.find]
where = ["."]
include = ["great_work*"]

[tool.ruff]
# Keep things readable, but not overly strict.
line-length = 100
target-version = "py312"

[tool.ruff.lint]
# Focus on core correctness checks out of the box.
select = ["E", "F"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
# Tests often use unused imports/variables and relaxed style.
"tests/**/*" = ["E402", "F401"]

[tool.ruff.format]
quote-style = "preserve"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
